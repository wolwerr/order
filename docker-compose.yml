version: '3.1'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - MAVEN_SKIP_TEST="true"
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:my-secret-pw@mongodb:27017/order?authSource=admin
      SPRING_PROFILES_ACTIVE: hom

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: my-secret-pw
      MONGO_INITDB_DATABASE: order
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db/
      - /etc/timezone:/etc/timezone:ro


  mongo-express:
    image: mongo-express:latest
    container_name: mongodb_express_pedidos
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo
      ME_CONFIG_MONGODB_ADMINPASSWORD: my-secret-pw
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_URL: mongodb://mongo:my-secret-pw@mongo:27017/pedidos?authSource=admin
    ports:
      - "8070:8081"
    depends_on:
      - mongodb

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  mongodb_data: